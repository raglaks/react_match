{"version":3,"sources":["images/eye1.jpg","images/eye2.jpg","images/eye3.jpg","images/eye4.jpg","images/eye5.jpg","images/eye6.jpg","images/eye7.jpg","images/eye8.jpg","images/eye9.jpg","images/eye10.jpg","images/eye11.jpg","images/eye12.jpg","GridBodyUp.js","GridBodyMid.js","GridBodyLow.js","Grid.js","Top.js","Score.js","ScoreGrid.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","GridBodyUp","props","rows","imgData","map","row","index","react_default","a","createElement","key","id","onClick","clickCheck","className","src","pic","alt","GridBodyMid","GridBodyLow","Grid","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","picts","func","setState","console","log","nextProps","src_GridBodyUp","src_GridBodyMid","src_GridBodyLow","Component","Top","topScore","Score","score","ScoreGrid","src_Top","src_Score","App","startGame","top","eye1","clicked","eye2","eye3","eye4","eye5","eye6","eye7","eye8","eye9","eye10","eye11","eye12","shuffle","arr","temporaryValue","randomIndex","currentIndex","length","Math","floor","random","handleClick","event","preventDefault","click","target","updateClick","targ","loser","numTarg","parseInt","selected","changeArr","loseGame","array","newScore","message","style","color","src_ScoreGrid","src_Grid","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.84321c35.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/eye1.83283602.jpg\";","module.exports = __webpack_public_path__ + \"static/media/eye2.02697d3b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/eye3.0211b18d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/eye4.f761a812.jpg\";","module.exports = __webpack_public_path__ + \"static/media/eye5.0a9956ef.jpg\";","module.exports = __webpack_public_path__ + \"static/media/eye6.793593c0.jpg\";","module.exports = __webpack_public_path__ + \"static/media/eye7.aeaf8f75.jpg\";","module.exports = __webpack_public_path__ + \"static/media/eye8.a83548e4.jpg\";","module.exports = __webpack_public_path__ + \"static/media/eye9.0b26edc2.jpg\";","module.exports = __webpack_public_path__ + \"static/media/eye10.2f932fba.jpg\";","module.exports = __webpack_public_path__ + \"static/media/eye11.c14c8b5d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/eye12.622be37f.jpg\";","import React from 'react';\n\nconst GridBodyUp = props => {\n\n    let rows = props.imgData.map((row, index) => {\n\n        //console.log(\"UP\", row);\n\n        if (index <= 3) {\n\n            if (index === 1 || index === 3) {\n\n                return (\n\n                    <td key={index}><img id={index} onClick={props.clickCheck} className=\"resize anti\" src={row.pic} alt={index}></img></td>\n    \n                )\n\n            } else {\n\n                return (\n\n                    <td key={index}><img id={index} onClick={props.clickCheck} className=\"resize clock\" src={row.pic} alt={index}></img></td>\n    \n                )\n\n            }\n\n        } \n\n        return rows;\n\n    });\n\n    return (\n\n        <tr>{rows}</tr>\n\n    )\n\n}\n\nexport default GridBodyUp;","import React from 'react';\n\nconst GridBodyMid = props => {\n\n    let rows = props.imgData.map((row, index) => {\n\n        //console.log(\"MID\", row);\n\n        if (index >= 4 && index <= 7) {\n\n            if (index === 5 || index === 7) {\n\n                return (\n\n                    <td key={index}><img id={index} onClick={props.clickCheck} className=\"resize anti\" src={row.pic} alt={index}></img></td>\n    \n                )\n\n            } else {\n\n                return (\n\n                    <td key={index}><img id={index} onClick={props.clickCheck} className=\"resize clock\" src={row.pic} alt={index}></img></td>\n    \n                )\n\n            }\n\n        }\n\n        return rows;\n\n    });\n\n    return (\n\n        <tr>{rows}</tr>\n\n    )\n\n}\n\nexport default GridBodyMid;","import React from 'react';\n\nconst GridBodyLow = props => {\n\n    let rows = props.imgData.map((row, index) => {\n\n        //console.log(\"LOW\", row);\n\n        if (index >= 8) {\n\n            if (index === 8 || index === 10) {\n\n                return (\n\n                    <td key={index}><img id={index} onClick={props.clickCheck} className=\"resize anti\" src={row.pic} alt={index}></img></td>\n    \n                ) \n\n            } else {\n\n                return (\n\n                    <td key={index}><img id={index} onClick={props.clickCheck} className=\"resize clock\" src={row.pic} alt={index}></img></td>\n    \n                )\n\n            }\n\n        }\n\n        return rows;\n\n    });\n\n    return (\n\n        <tr>{rows}</tr>\n\n    )\n\n}\n\nexport default GridBodyLow;","import React, { Component } from \"react\";\nimport GridBodyUp from \"./GridBodyUp\";\nimport GridBodyMid from \"./GridBodyMid\";\nimport GridBodyLow from \"./GridBodyLow\";\n\nclass Grid extends Component {\n\n  constructor(props) {\n\n    super(props);\n\n    this.state = {\n\n      picts: [],\n      func: {}\n\n    };\n  }\n\n  componentDidMount(){\n\n    this.setState({\n\n      picts: this.props.imgData,\n\n    });\n\n  }\n\n  componentDidUpdate() {\n\n    console.log(\"GRID STATE UPDATED\", this.state.picts);\n\n  }\n\n  componentWillReceiveProps(nextProps) {\n    console.log(\"NEW PROPS BRO\", nextProps);\n\n    this.setState({\n\n      picts: nextProps.imgData\n\n    });\n\n  }\n\n  render() {\n\n    return (\n\n        <table>\n          <tbody>\n            <GridBodyUp imgData={this.state.picts} clickCheck={this.props.clickCheck}/>\n\n            <GridBodyMid imgData={this.state.picts} clickCheck={this.props.clickCheck}/>\n\n            <GridBodyLow imgData={this.state.picts} clickCheck={this.props.clickCheck}/>\n          </tbody>\n        </table>\n\n    );\n  }\n}\n\nexport default Grid;\n","import React from 'react';\n\nconst Top = props => {\n\n    console.log(\"TOP sCORE\", props);\n\n    return <tr><td>TOP SCORE: {props.topScore}</td></tr>\n\n}\n\nexport default Top;","import React from 'react';\n\nconst Score = props => {\n\n    console.log(\"SCORE\", props);\n\n    return <tr><td>SCORE: {props.score}</td></tr>\n\n}\n\nexport default Score;","import React, { Component } from \"react\";\nimport Top from \"./Top\";\nimport Score from \"./Score\";\n\nclass ScoreGrid extends Component{\n\n    constructor(props) {\n\n        super(props);\n    \n        this.state = {\n    \n          score: 0,\n          topScore: 0\n    \n        };\n      }\n\n      componentDidMount(){\n\n        this.setState({\n    \n          score: this.props.score,\n          topScore: this.props.topScore\n    \n        });\n    \n      }\n\n      componentWillReceiveProps(nextProps) {\n        console.log(\"NEW PROPS BRO\", nextProps);\n    \n        this.setState({\n\n            score: nextProps.score,\n            topScore: nextProps.topScore\n    \n        });\n    \n      }\n\n      render() {\n\n        return(\n\n            <table>\n                <tbody>\n                    <Top topScore={this.state.topScore}/>\n                    <Score score={this.state.score}/>\n                </tbody>\n            </table>\n\n        )\n\n      }\n\n}\n\nexport default ScoreGrid;","import React, { Component } from \"react\";\nimport Grid from \"./Grid\";\nimport eye1 from \"./images/eye1.jpg\";\nimport eye2 from \"./images/eye2.jpg\";\nimport eye3 from \"./images/eye3.jpg\";\nimport eye4 from \"./images/eye4.jpg\";\nimport eye5 from \"./images/eye5.jpg\";\nimport eye6 from \"./images/eye6.jpg\";\nimport eye7 from \"./images/eye7.jpg\";\nimport eye8 from \"./images/eye8.jpg\";\nimport eye9 from \"./images/eye9.jpg\";\nimport eye10 from \"./images/eye10.jpg\";\nimport eye11 from \"./images/eye11.jpg\";\nimport eye12 from \"./images/eye12.jpg\";\nimport \"./App.css\";\nimport ScoreGrid from \"./ScoreGrid\";\n\nclass App extends Component {\n\n  constructor(props) {\n\n    super(props);\n\n    //set initial state so that components load\n    this.state = {\n\n      score: 0,\n\n      topScore: 0,\n  \n      picts: [\n        { pic: eye1, id: 0, clicked: false },\n        { pic: eye2, id: 1, clicked: false },\n        { pic: eye3, id: 2, clicked: false },\n        { pic: eye4, id: 3, clicked: false },\n        { pic: eye5, id: 4, clicked: false },\n        { pic: eye6, id: 5, clicked: false },\n        { pic: eye7, id: 6, clicked: false },\n        { pic: eye8, id: 7, clicked: false },\n        { pic: eye9, id: 8, clicked: false },\n        { pic: eye10, id: 9, clicked: false },\n        { pic: eye11, id: 10, clicked: false },\n        { pic: eye12, id: 11, clicked: false }\n      ],\n\n      loser: false\n\n    };\n  }\n  \n  //check state when component mounts\n  componentDidMount() {\n\n    console.log(\"MOUNT:\", this.state);\n\n  }\n\n  //check state each time component update (state change)\n  componentDidUpdate() {\n\n    console.log(\"STATE UPDATED:\", this.state);\n\n  }\n\n  //method to reset state but keep top score\n  startGame = (top) => {\n\n    this.setState({\n\n      score: 0,\n\n      topScore: top,\n  \n      picts: [\n        { pic: eye1, id: 0, clicked: false },\n        { pic: eye2, id: 1, clicked: false },\n        { pic: eye3, id: 2, clicked: false },\n        { pic: eye4, id: 3, clicked: false },\n        { pic: eye5, id: 4, clicked: false },\n        { pic: eye6, id: 5, clicked: false },\n        { pic: eye7, id: 6, clicked: false },\n        { pic: eye8, id: 7, clicked: false },\n        { pic: eye9, id: 8, clicked: false },\n        { pic: eye10, id: 9, clicked: false },\n        { pic: eye11, id: 10, clicked: false },\n        { pic: eye12, id: 11, clicked: false }\n      ],\n\n    });\n\n  }\n\n  //method to shuffle array of pics\n  shuffle = (arr) => {\n\n      let currentIndex = arr.length;\n      let temporaryValue, randomIndex;\n    \n      // While there remain elements to shuffle...\n      while (0 !== currentIndex) {\n        // Pick a remaining element...\n        randomIndex = Math.floor(Math.random() * currentIndex);\n        currentIndex -= 1;\n    \n        // And swap it with the current element.\n        temporaryValue = arr[currentIndex];\n        arr[currentIndex] = arr[randomIndex];\n        arr[randomIndex] = temporaryValue;\n      }\n    \n      return arr;\n\n  }\n\n  //event handler for clicks\n  handleClick = event => {\n\n    event.preventDefault();\n\n    let click = event.target.id;\n\n    //runs update click method to evaluate loss and shuffle\n    this.updateClick(click);\n\n  };\n\n  changeArr(array, index) {\n\n    let newScore = this.state.score;\n\n    newScore++;\n\n    array[index].clicked = true;\n\n    this.shuffle(array);\n\n    this.setState({\n\n      picts: array,\n      score: newScore\n\n    });\n\n    console.log(\"SHUFFLED\", this.state);\n\n  }\n\n  updateClick = targ => {\n\n    this.setState({\n\n      loser: false\n\n    });\n\n    //parse id into num\n    let numTarg = parseInt(targ);\n\n    //current state array\n    let arr = this.state.picts;\n\n    //find corresponding obj within state array of all objs\n    let selected = this.state.picts[numTarg];\n\n    console.log(selected);\n\n    //check if corresponding obj clicked val is false\n    if (selected.clicked === false) {\n\n      this.changeArr(arr, numTarg);\n\n    } else {\n\n      //else run lose game method\n      this.loseGame();\n\n    }\n\n  };\n\n  loseGame = () => {\n\n    this.setState({\n\n      loser: true\n\n    });\n\n    console.log(\"YOU LOSE\", this.state);\n\n    if (this.state.topScore < this.state.score) {\n\n      this.startGame(this.state.score);\n\n    } else {\n\n      this.startGame(this.state.topScore)\n\n    }\n\n  };\n\n  render() {\n\n    let Loser = (props) => {\n\n      console.log(\"LOSER PROPS\", props);\n\n      let message;\n\n      if (props.loser === true) {\n\n        message = <h1 style={{color: \"red\"}}>LOSER</h1>;\n\n      } else {\n\n        message = <span></span>;\n\n      }\n\n      return(\n\n        <table>\n          <tbody>\n            <tr>\n              <td>\n                {message}\n              </td>\n            </tr>\n          </tbody>\n        </table>\n\n      )\n\n    }\n\n    return (\n      <div className=\"App-header fonts\">\n        <Loser loser={this.state.loser}/>\n        <ScoreGrid score={this.state.score} topScore={this.state.topScore}/>\n        <Grid imgData={this.state.picts} clickCheck={this.handleClick} />\n      </div>\n    );\n  }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}